
/* 
 * Swiss Modernist Grid System
 * Based on principles of Swiss typography and modular grid design
 */

:root {
  /* Default grid variables - will be overridden by JavaScript */
  --grid-columns: 12;
  --grid-rows: 36;
  --grid-module: 4vw;     /* Base module size used for spacing rhythm */
  --grid-gap: 2vw;        /* Gap between grid cells */
  --container-padding: 3vw; /* Padding around the entire grid */
  --module-ratio: 1.5;    /* Golden ratio approximation for vertical rhythm */
}

/* Main grid container */
.grid-container {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  grid-auto-rows: minmax(min-content, auto);
  gap: var(--grid-gap);
  padding: var(--container-padding);
  max-width: calc(100vw - 2 * var(--container-padding));
  margin: 0 auto;
  position: relative;
  box-sizing: border-box;
  
  /* Create stacking context */
  isolation: isolate;
  
  /* Ensure proper spacing */
  margin-bottom: calc(var(--grid-module) * 2);
}

/* Grid items - the containers for media */
.grid-item {
  position: relative;
  overflow: hidden;
  background-color: transparent;
  aspect-ratio: var(--aspect-ratio, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  
  /* Ensure proper containment */
  box-sizing: border-box;
  max-width: 100%;
  
  /* Prevent overflow beyond viewport */
  max-width: calc(100vw - 2 * var(--container-padding));
  
  /* Faster interaction */
  transition: transform 0.6s cubic-bezier(0.27, 0.77, 0.41, 1);
  cursor: pointer;
}

/* Enhanced hover effect with more pronounced scaling */
.grid-item:hover {
  transform: translateY(-4px) scale(1.3);
  z-index: 2;
}

/* Media content inside grid items */
.grid-item .media-content {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  
  /* Prevent distortion */
  object-position: center;
  
  /* Ensure aspect ratio is maintained */
  max-width: 100%;
  max-height: 100%;
}

/* Ensure video content is properly contained */
.grid-item[data-media-type="video"] {
  overflow: hidden;
}

.grid-item[data-media-type="video"] video {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

/* Apply vertical rhythm */
.grid-item:nth-child(3n+1) {
  align-self: start;
}

.grid-item:nth-child(3n+2) {
  align-self: center;
}

.grid-item:nth-child(3n+3) {
  align-self: end;
}

/* Ensure proper alignment and vertical rhythm */
.grid-item::before {
  content: "";
  display: block;
  height: 0;
  width: 0;
  padding-bottom: calc(100% / var(--aspect-ratio, 1));
}

/* Horizontal rhythm classes for Swiss-style asymmetric balance */
.grid-item:nth-child(2n) {
  justify-self: start;
}

.grid-item:nth-child(2n+1) {
  justify-self: end;
}

/* Tablet Layout */
@media (max-width: 1200px) {
  :root {
    --grid-columns: 8;
    --grid-rows: 48;
    --grid-module: 5vw;
    --grid-gap: 3vw;
    --container-padding: 4vw;
  }
  
  .grid-container {
    max-width: calc(100vw - 2 * var(--container-padding));
  }
  
  .grid-item {
    max-width: calc(100vw - 2 * var(--container-padding) - 2 * var(--grid-gap));
  }
}

/* Mobile Layout */
@media (max-width: 788px) {
  :root {
    --grid-columns: 4;
    --grid-rows: 60;
    --grid-module: 6vw;
    --grid-gap: 4vw;
    --container-padding: 5vw;
  }
  
  .grid-container {
    max-width: 100%;
    padding: var(--container-padding);
  }
  
  /* Mobile-specific adaptations */
  .grid-item {
    grid-column: 1 / span 4 !important; /* Force full width */
    aspect-ratio: var(--aspect-ratio, 1) !important;
    margin: calc(var(--grid-gap) / 2) 0 !important;
    width: 100%;
    max-width: calc(100vw - 2 * var(--container-padding));
  }
  
  /* Ensure spacing between items */
  .grid-item + .grid-item {
    margin-top: var(--grid-gap) !important;
  }
  
  /* Enhanced touch feedback with more pronounced scaling */
  .grid-item:active {
    transform: scale(0.96);
    opacity: 0.95;
  }
}

/* High-resolution screens */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .grid-item {
    /* Removed border-radius */
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .grid-item {
    /* Removed shadows */
  }
  
  .grid-item:hover {
    /* Removed shadows */
  }
}
